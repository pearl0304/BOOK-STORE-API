# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String
  email: String
  nick: String
  password: String
  address: String
  preferred_genre: String
  created_date: String
  update_date: String
  delete_date: String
  is_delete: Boolean
  point: Int!
}

type Like {
  id: ID
  userId: ID!
  bookId: ID!
  user: User
  book: Book
  action: String!
}

type Book {
  id: ID!
  authorId: ID!
  title: String!
  price: Int!
  isbn: Float
  publication_date: String
  publisher: String
  stock: Int!
  author: Author
  like: [Like]
  total_like: Int!
}

type Author {
  id: ID!
  name: String!
  book: [Book]
}

type Order {
  id: ID!
  userId: ID!
  bookIds: [String!]!
  user: User
  book: [Book]
  created_date: String
  status: OrderStatus!
  total_price: Int!
  delever_address: String!
}

enum OrderStatus {
  PENDING
  READY
  DELIVERY
  DONE
}

type Query {
  findAllAuthors: [Author]!
  findAuthorById(id: ID!): Author!
  findAllBooks: [Book]
  findBookById(id: ID!): Book!
  findAllUsers: [User]
  findUserById(id: ID!): User!
  findAllMyOrderList(userId: ID!): [Order]
  findOrderById: Order!
  findMyLikeList(userId: ID!): [Like]
  findUserLike(bookId: ID!): [Like]
}

type Mutation {
  createAuthor(input: CreateAuthorInput!): Author!
  createBook(input: CreateBookInput!): Book!
  deleteBook(id: ID!): ID!
  createUser(input: CreateUserInput!): User!
  updateUserInfo(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): ID!
  deleteUserByAdmin(id: ID!): ID!
  doOrderBook(input: CreateOrderInput!): Order
  doLike(input: CreateLikeInput!): Like
  deleteLike(bookId: ID!): ID!
}

input CreateAuthorInput {
  name: String!
  nationality: String
}

input CreateBookInput {
  authorId: ID!
  title: String!
  price: Int!
  isbn: Float
  publication_date: String
  publisher: String
  genre: String
  stock: Int
}

input CreateUserInput {
  name: String!
  email: String!
  nick: String!
  password: String!
  address: String
  preferred_genre: String
}

input UpdateUserInput {
  email: String
  name: String
  nick: String
  password: String
  address: String
  preferred_genre: String
}

input CreateOrderInput {
  userId: ID!
  bookIds: [String!]
  delever_address: String!
  total_price: Int!
}

input CreateLikeInput {
  id: ID
  userId: ID!
  bookId: ID!
  action: String!
}